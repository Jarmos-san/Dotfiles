#!/usr/bin/env python3

"""
Easily update the system through a simple script.

Author: Somraj Saha
License: GPL-3.0 (see https://github.com/Jarmos-san/dotfiles/blob/main/LICENSE for more
         information)
"""


import platform
import subprocess


def is_brew_installed() -> bool:
    """Check if Homebrew is installed and available on $PATH."""
    try:
        subprocess.run(
            ["brew", "--version"],
            stdout=subprocess.PIPE,
            stderr=subprocess.PIPE,
            check=True,
        )
        return True
    except subprocess.CalledProcessError:
        return False


def run_brew_updates() -> None:
    """Run Homebrew to update the respective packages and then some cleanup actions."""
    subprocess.run(["brew", "update"])
    subprocess.run(["brew", "upgrade"])
    subprocess.run(["brew", "autoremove"])
    subprocess.run(["brew", "cleanup"])


def run_apt_updates() -> None:
    """Run APT to update a Debian/Ubuntu system and then some cleanup actions."""
    subprocess.run(["sudo", "apt-get", "update"])
    subprocess.run(["sudo", "apt-get", "upgrade", "--assume-yes"])
    subprocess.run(["sudo", "apt-get", "autoremove", "--purge"])


def main() -> None:
    """Entrypoint of the script."""
    # Run system updates if the detected OS is Linux
    if platform.system() == "Linux":
        # Get the name of the OS the script is running on
        os_name = platform.freedesktop_os_release().get("NAME")

        match os_name:
            case "Ubuntu" | "Debian":
                run_apt_updates()
            case _:
                print("Failed to identify the OS! Aborting...")
    # Run system updates if the detected OS is MacOS
    elif platform.system == "MacOS":
        if is_brew_installed():
            run_brew_updates()


if __name__ == "__main__":
    main()
